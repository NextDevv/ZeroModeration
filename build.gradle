plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0-Beta'
}

group = 'zero.it.plugins'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // JSON
    implementation 'com.github.SpreestDev:JsonFile:V1.5.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'


    // Ktor
    implementation 'io.ktor:ktor-client-core-jvm:2.3.1'
    implementation 'io.ktor:ktor-client-cio-jvm:2.3.1'

    // Google
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.http-client:google-http-client:1.43.2'

    // http
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
